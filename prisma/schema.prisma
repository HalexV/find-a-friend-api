// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum State {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

model Org {
  id               String   @id @default(uuid())
  email            String   @unique
  password_hash    String
  address          String
  cep              String
  state            State
  city             String
  latitude         Decimal
  longitude        Decimal
  name             String
  responsible_name String
  whatsapp_number  String
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  pets                 Pet[]
  AdoptionRequirements AdoptionRequirement[]

  @@map("orgs")
}

enum Age {
  PUPPY
  ADULT
  ELDERLY
}

enum Size {
  SMALL
  MEDIUM
  BIG
}

enum EnergyLevel {
  VERY_LOW
  LOW
  AVERAGE
  HIGH
  VERY_HIGH
}

enum IndependenceLevel {
  LOW
  AVERAGE
  HIGH
}

enum Ambience {
  SMALL
  MEDIUM
  BIG
}

enum Type {
  CAT
  DOG
}

model Pet {
  id                 String            @id @default(uuid())
  about              String
  age                Age
  ambience           Ambience
  available          Boolean
  energy_level       EnergyLevel
  independence_level IndependenceLevel
  name               String
  size               Size
  type               Type
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt

  org                   Org                   @relation(fields: [org_id], references: [id])
  org_id                String
  photos                Photo[]
  adoption_requirements AdoptionRequirement[]

  @@map("pets")
}

model Photo {
  id         String   @id @default(uuid())
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  pet    Pet    @relation(fields: [pet_id], references: [id])
  pet_id String

  @@map("photos")
}

model AdoptionRequirement {
  id         String   @id @default(uuid())
  title      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  org    Org    @relation(fields: [org_id], references: [id])
  org_id String
  pets   Pet[]

  @@map("adoption_requirements")
}
